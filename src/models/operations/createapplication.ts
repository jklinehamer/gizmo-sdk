/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The created user
 */
export type CreateApplicationResponse = {
  id: string;
};

/** @internal */
export const CreateApplicationResponse$inboundSchema: z.ZodType<
  CreateApplicationResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type CreateApplicationResponse$Outbound = {
  id: string;
};

/** @internal */
export const CreateApplicationResponse$outboundSchema: z.ZodType<
  CreateApplicationResponse$Outbound,
  z.ZodTypeDef,
  CreateApplicationResponse
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateApplicationResponse$ {
  /** @deprecated use `CreateApplicationResponse$inboundSchema` instead. */
  export const inboundSchema = CreateApplicationResponse$inboundSchema;
  /** @deprecated use `CreateApplicationResponse$outboundSchema` instead. */
  export const outboundSchema = CreateApplicationResponse$outboundSchema;
  /** @deprecated use `CreateApplicationResponse$Outbound` instead. */
  export type Outbound = CreateApplicationResponse$Outbound;
}

export function createApplicationResponseToJSON(
  createApplicationResponse: CreateApplicationResponse,
): string {
  return JSON.stringify(
    CreateApplicationResponse$outboundSchema.parse(createApplicationResponse),
  );
}

export function createApplicationResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateApplicationResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateApplicationResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateApplicationResponse' from JSON`,
  );
}
