/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../types/enums.js";

/**
 * The two-letter state abbreviation in lowercase
 */
export const State = {
  Al: "al",
  Ak: "ak",
  Az: "az",
  Ar: "ar",
  Ca: "ca",
  Co: "co",
  Ct: "ct",
  De: "de",
  Dc: "dc",
  Fl: "fl",
  Ga: "ga",
  Hi: "hi",
  Id: "id",
  Il: "il",
  In: "in",
  Ia: "ia",
  Ks: "ks",
  Ky: "ky",
  La: "la",
  Me: "me",
  Md: "md",
  Ma: "ma",
  Mi: "mi",
  Mn: "mn",
  Ms: "ms",
  Mo: "mo",
  Mt: "mt",
  Ne: "ne",
  Nv: "nv",
  Nh: "nh",
  Nj: "nj",
  Nm: "nm",
  Ny: "ny",
  Nc: "nc",
  Nd: "nd",
  Oh: "oh",
  Ok: "ok",
  Or: "or",
  Pa: "pa",
  Ri: "ri",
  Sc: "sc",
  Sd: "sd",
  Tn: "tn",
  Tx: "tx",
  Ut: "ut",
  Vt: "vt",
  Va: "va",
  Wa: "wa",
  Wv: "wv",
  Wi: "wi",
  Wy: "wy",
} as const;
/**
 * The two-letter state abbreviation in lowercase
 */
export type State = ClosedEnum<typeof State>;

/** @internal */
export const State$inboundSchema: z.ZodNativeEnum<typeof State> = z.nativeEnum(
  State,
);

/** @internal */
export const State$outboundSchema: z.ZodNativeEnum<typeof State> =
  State$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace State$ {
  /** @deprecated use `State$inboundSchema` instead. */
  export const inboundSchema = State$inboundSchema;
  /** @deprecated use `State$outboundSchema` instead. */
  export const outboundSchema = State$outboundSchema;
}
