/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { GizmoError } from "./gizmoerror.js";

/**
 * Rate limit exceeded
 */
export type CreateApplicationRateLimitedErrorData = {
  kind: "RateLimited";
  name: string;
  retryAfter: number;
};

/**
 * Rate limit exceeded
 */
export class CreateApplicationRateLimitedError extends GizmoError {
  kind: "RateLimited";
  retryAfter: number;

  /** The original data that was passed to this error instance. */
  data$: CreateApplicationRateLimitedErrorData;

  constructor(
    err: CreateApplicationRateLimitedErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.kind = err.kind;
    this.retryAfter = err.retryAfter;

    this.name = "CreateApplicationRateLimitedError";
  }
}

/** @internal */
export const CreateApplicationRateLimitedError$inboundSchema: z.ZodType<
  CreateApplicationRateLimitedError,
  z.ZodTypeDef,
  unknown
> = z.object({
  kind: z.literal("RateLimited"),
  name: z.string(),
  retryAfter: z.number(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new CreateApplicationRateLimitedError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type CreateApplicationRateLimitedError$Outbound = {
  kind: "RateLimited";
  name: string;
  retryAfter: number;
};

/** @internal */
export const CreateApplicationRateLimitedError$outboundSchema: z.ZodType<
  CreateApplicationRateLimitedError$Outbound,
  z.ZodTypeDef,
  CreateApplicationRateLimitedError
> = z.instanceof(CreateApplicationRateLimitedError)
  .transform(v => v.data$)
  .pipe(z.object({
    kind: z.literal("RateLimited"),
    name: z.string(),
    retryAfter: z.number(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateApplicationRateLimitedError$ {
  /** @deprecated use `CreateApplicationRateLimitedError$inboundSchema` instead. */
  export const inboundSchema = CreateApplicationRateLimitedError$inboundSchema;
  /** @deprecated use `CreateApplicationRateLimitedError$outboundSchema` instead. */
  export const outboundSchema =
    CreateApplicationRateLimitedError$outboundSchema;
  /** @deprecated use `CreateApplicationRateLimitedError$Outbound` instead. */
  export type Outbound = CreateApplicationRateLimitedError$Outbound;
}
