/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

export const Milestone = {
  New: "NEW",
  Attempted: "ATTEMPTED",
  Contacted: "CONTACTED",
  CreditPulled: "CREDIT_PULLED",
  PreApproved: "PRE_APPROVED",
  Application: "APPLICATION",
  Processing: "PROCESSING",
  Submittal: "SUBMITTAL",
  Resubmittal: "RESUBMITTAL",
  ConditionallyApproved: "CONDITIONALLY_APPROVED",
  FinalApproved: "FINAL_APPROVED",
  DocsOut: "DOCS_OUT",
  Funded: "FUNDED",
  Purchased: "PURCHASED",
  Completed: "COMPLETED",
  Withdrawn: "WITHDRAWN",
  Denied: "DENIED",
} as const;
export type Milestone = ClosedEnum<typeof Milestone>;

/** @internal */
export const Milestone$inboundSchema: z.ZodNativeEnum<typeof Milestone> = z
  .nativeEnum(Milestone);

/** @internal */
export const Milestone$outboundSchema: z.ZodNativeEnum<typeof Milestone> =
  Milestone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Milestone$ {
  /** @deprecated use `Milestone$inboundSchema` instead. */
  export const inboundSchema = Milestone$inboundSchema;
  /** @deprecated use `Milestone$outboundSchema` instead. */
  export const outboundSchema = Milestone$outboundSchema;
}
