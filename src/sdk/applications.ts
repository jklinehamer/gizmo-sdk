/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { applicationsCreate } from "../funcs/applicationsCreate.js";
import { applicationsGet } from "../funcs/applicationsGet.js";
import { applicationsUpdate } from "../funcs/applicationsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Applications extends ClientSDK {
  /**
   * Get Application
   */
  async get(
    request: operations.GetApplicationRequest,
    options?: RequestOptions,
  ): Promise<models.ApplicationSelect> {
    return unwrapAsync(applicationsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Application
   */
  async update(
    request: operations.UpdateApplicationRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(applicationsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Application
   */
  async create(
    request: models.ApplicationInsert,
    options?: RequestOptions,
  ): Promise<operations.CreateApplicationResponse> {
    return unwrapAsync(applicationsCreate(
      this,
      request,
      options,
    ));
  }
}
