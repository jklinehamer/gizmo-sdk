/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { applicationCreateApplication } from "../funcs/applicationCreateApplication.js";
import { applicationGetApplication } from "../funcs/applicationGetApplication.js";
import { applicationUpdateApplication } from "../funcs/applicationUpdateApplication.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Application extends ClientSDK {
  /**
   * Get Application
   */
  async getApplication(
    id: string,
    options?: RequestOptions,
  ): Promise<models.Application> {
    return unwrapAsync(applicationGetApplication(
      this,
      id,
      options,
    ));
  }

  /**
   * Update Application
   */
  async updateApplication(
    id: string,
    requestBody?: operations.UpdateApplicationRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(applicationUpdateApplication(
      this,
      id,
      requestBody,
      options,
    ));
  }

  /**
   * Create Application
   */
  async createApplication(
    request?: operations.CreateApplicationRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.CreateApplicationResponse> {
    return unwrapAsync(applicationCreateApplication(
      this,
      request,
      options,
    ));
  }
}
